<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quick Start on WebLogic Kubernetes Operator</title>
    <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/</link>
    <description>Recent content in Quick Start on WebLogic Kubernetes Operator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 22 Feb 2019 15:27:38 -0500</lastBuildDate>
    
	<atom:link href="https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/introduction/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/introduction/</guid>
      <description>Use this Quick Start guide to create a WebLogic Server deployment in a Kubernetes cluster with the WebLogic Kubernetes Operator. Please note that this walk-through is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, please refer to the User guide.
All Kubernetes distributions and managed services have small differences. In particular, the way that persistent storage and load balancers are managed varies significantly.</description>
    </item>
    
    <item>
      <title>Before you begin</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/prerequisites/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/prerequisites/</guid>
      <description>For this exercise, youâ€™ll need a Kubernetes cluster. If you need help setting one up, check out our cheat sheet. This guide assumes a single node cluster.
The operator uses Helm to create and deploy the necessary resources and then run the operator in a Kubernetes cluster. For Helm installation and usage information, see Install Helm.
You should clone this repository to your local machine so that you have access to the various sample files mentioned throughout this guide:</description>
    </item>
    
    <item>
      <title>Get images</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/get-images/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/get-images/</guid>
      <description>Get these images and put them into your local registry.   Pull the operator image:
$ docker pull ghcr.io/oracle/weblogic-kubernetes-operator:3.2.3   Pull the Traefik ingress controller image:
$ docker pull traefik:2.2.1   Obtain the WebLogic Server image from the Oracle Container Registry.
a. First time users, follow these directions.
b. Find and then pull the WebLogic 12.2.1.4 install image:
$ docker pull container-registry.oracle.com/middleware/weblogic:12.2.1.4  The WebLogic Server image, weblogic:12.</description>
    </item>
    
    <item>
      <title>Install the operator and ingress controller</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/install/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/install/</guid>
      <description>Use Helm to install the operator and Traefik ingress controller. First, set up Helm:
$ helm repo add traefik https://containous.github.io/traefik-helm-chart/ --force-update Create a Traefik ingress controller. Create a namespace for the ingress controller.
$ kubectl create namespace traefik Use the values.yaml file in the sample but set kubernetes.namespaces specifically.
$ helm install traefik-operator traefik/traefik \  --namespace traefik \  --values kubernetes/samples/charts/traefik/values.yaml \  --set &amp;#34;kubernetes.namespaces={traefik}&amp;#34; Install the operator.   Create a namespace for the operator:</description>
    </item>
    
    <item>
      <title>Prepare for a domain</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/prepare/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/prepare/</guid>
      <description>Create and label a namespace that can host one or more domains:
$ kubectl create namespace sample-domain1-ns $ kubectl label ns sample-domain1-ns weblogic-operator=enabled   Configure Traefik to manage ingresses created in this namespace:
$ helm upgrade traefik-operator traefik/traefik \  --namespace traefik \  --reuse-values \  --set &amp;#34;kubernetes.namespaces={traefik,sample-domain1-ns}&amp;#34;   If you have reached this point while following the &amp;ldquo;Model in Image&amp;rdquo; sample, please stop here and return to the sample instructions.</description>
    </item>
    
    <item>
      <title>Create a domain</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/create-domain/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/create-domain/</guid>
      <description>For use in the following steps:
 Select a user name and password, following the required rules for password creation (at least 8 alphanumeric characters with at least one number or special character). Pick or create a directory to which you can write output.    Create a Kubernetes Secret for the WebLogic domain administrator credentials containing the username and password for the domain, using the create-weblogic-credentials script:</description>
    </item>
    
    <item>
      <title>Clean up</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/cleanup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/quickstart/cleanup/</guid>
      <description>Remove the domain.   Remove the domain&amp;rsquo;s ingress by using helm:
$ helm uninstall sample-domain1-ingress -n sample-domain1-ns   Remove the Kubernetes resources associated with the domain by using the sample delete-weblogic-domain-resources script:
$ kubernetes/samples/scripts/delete-domain/delete-weblogic-domain-resources.sh -d sample-domain1   Use kubectl to confirm that the WebLogic Server instance Pods and Domain are gone:
$ kubectl get pods -n sample-domain1-ns $ kubectl get domains -n sample-domain1-ns   Remove the domain namespace.</description>
    </item>
    
  </channel>
</rss>