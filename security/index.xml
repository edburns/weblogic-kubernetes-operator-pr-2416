<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on WebLogic Kubernetes Operator</title>
    <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/</link>
    <description>Recent content in Security on WebLogic Kubernetes Operator</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 23 Feb 2019 17:34:48 -0500</lastBuildDate>
    
	<atom:link href="https://polite-dune-0a7bd1d10.azurestaticapps.net/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Certificates</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/certificates/</link>
      <pubDate>Wed, 06 Mar 2019 21:14:18 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/certificates/</guid>
      <description>Updating operator external certificates If the operator needs to update the external certificate and key currently being used or was installed without an external REST API SSL/TLS identity, the helm upgrade command is used to restart the operator with the new or updated Kubernetes tls secret that contains the desired certificates.
The operator requires a restart in order to begin using the new or updated external certificate. The Helm --recreate-pods flag is used to cause the existing Kubernetes Pod to be terminated and a new pod to be started with the updated configuration.</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/encryption/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:29 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/encryption/</guid>
      <description>Contents  Introspector encryption Encryption of Kubernetes Secrets Additional reading  Introspector encryption The operator has an introspection job that handles WebLogic domain encryption. The introspection job also addresses the use of Kubernetes Secrets with configuration overrides. For additional information on the configuration handling, see Configuration overrides.
The introspection job also creates a boot.properties file that is made available to the pods in the WebLogic domain. The credential used for the WebLogic domain is kept in a Kubernetes Secret which follows the naming pattern &amp;lt;domainUID&amp;gt;-weblogic-credentials, where &amp;lt;domainUID&amp;gt; is the unique identifier of the domain, for example, mydomain-weblogic-credentials.</description>
    </item>
    
    <item>
      <title>Service accounts</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/service-accounts/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:12 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/service-accounts/</guid>
      <description>WebLogic Kubernetes Operator ServiceAccounts When the operator is installed, the Helm chart property, serviceAccount, can be specified where the value contains the name of the Kubernetes ServiceAccount in the namespace in which the operator will be installed. For more information about the Helm chart, see the Operator Helm configuration values.
The operator will use this ServiceAccount when calling the Kubernetes API server and the appropriate access controls will be created for this ServiceAccount by the operator&amp;rsquo;s Helm chart.</description>
    </item>
    
    <item>
      <title>RBAC</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/rbac/</link>
      <pubDate>Sat, 23 Feb 2019 17:15:36 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/rbac/</guid>
      <description>Contents  Overview Operator RBAC definitions  Role and RoleBinding naming conventions ClusterRole and ClusterRoleBinding naming conventions   RoleBindings ClusterRoleBindings  Overview The operator assumes that certain Kubernetes Roles are created in the Kubernetes cluster. The operator Helm chart creates the required ClusterRoles, ClusterRoleBindings, Roles, and RoleBindings for the ServiceAccount that is used by the operator. The operator will also attempt to verify that the RBAC settings are correct when the operator starts running.</description>
    </item>
    
    <item>
      <title>Secrets</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/secrets/</link>
      <pubDate>Sat, 23 Feb 2019 17:36:33 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/secrets/</guid>
      <description>Contents  Domain credentials secret Domain image pull secret Operator image pull secret Operator configuration override secrets Operator external REST interface secret Operator internal REST interface secret  Domain credentials secret The credentials for the WebLogic domain are kept in a Kubernetes Secret where the name of the secret is specified using webLogicCredentialsSecret in the WebLogic Domain resource. Also, the domain credentials secret must be created in the namespace where the Domain will be running.</description>
    </item>
    
    <item>
      <title>OpenShift</title>
      <link>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/openshift/</link>
      <pubDate>Fri, 04 Oct 2019 08:08:08 -0500</pubDate>
      
      <guid>https://polite-dune-0a7bd1d10.azurestaticapps.net/security/openshift/</guid>
      <description>Security requirements to run WebLogic in OpenShift WebLogic Kubernetes Operator images starting with version 3.1 and WebLogic Server images obtained from Oracle Container Registry after August 2020 have an oracle user with UID 1000 with the default group set to root.
Here is an excerpt from a standard WebLogic Dockerfile that demonstrates how the file system group ownership is configured in the standard WebLogic Server images:
# Setup filesystem and oracle user# Adjust file permissions, go to /u01 as user &amp;#39;oracle&amp;#39; to proceed with WLS installation# ------------------------------------------------------------RUN mkdir -p /u01 &amp;amp;&amp;amp; \  chmod 775 /u01 &amp;amp;&amp;amp; \  useradd -b /u01 -d /u01/oracle -m -s /bin/bash oracle &amp;amp;&amp;amp; \  chown oracle:root /u01COPY --from=builder --chown=oracle:root /u01 /u01OpenShift, by default, enforces the restricted security context constraint which allocates a high, random UID in the root group for each container.</description>
    </item>
    
  </channel>
</rss>